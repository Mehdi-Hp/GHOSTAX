{"version":3,"file":"dropdown.js","sources":["../src/helpers.js","../src/dropdownItem.js","../src/dropdown.js"],"sourcesContent":["const deepMerge = require('deepmerge');\n\n\nconst hasClickedAway = (element, event) => {\n  return !element.contains(event.target);\n};\n\nexport { hasClickedAway };\n\n\nconst listHelpers = {\n  normalize(list = [], currentValue) {\n    return list.map((item) => {\n      const newList = {\n        ...item,\n        isSelected: item.isSelected || currentValue == item.id || false,\n        isHighlighted: item.isHighlighted || false\n      };\n      return newList;\n    });\n  }\n};\n\nexport { listHelpers };\n\n\nconst optionsHelpers = {\n  normalize(options, defaultOption) {\n    return deepMerge(defaultOption, options);\n  },\n  validate(passedOptions, defaultOptions) {\n    Object.keys(passedOptions).forEach((passedOptionKey) => {\n      if (!defaultOptions.hasOwnProperty(passedOptionKey)) {\n        console.error(`${passedOptionKey} doesn't seem to be a valid option. valid options are -> ${defaultOptions}`);\n      }\n    });\n  }\n};\n\nexport { optionsHelpers };\n","const DropdownItem = {\n  props: {\n    instanceId: {\n      type: String,\n      required: true\n    },\n    list: {\n      type: Array,\n      required: true\n    },\n    item: {\n      type: Object,\n      required: true\n    }\n  },\n  data() {\n    return {\n      isSelected: false,\n      isHighlighted: false\n    };\n  },\n  methods: {\n    highlight(item) {\n      item.isHighlighted = true;\n    },\n    blur(item) {\n      item.isHighlighted = false;\n    },\n    select(item) {\n      const previouslySelected = this.list.find((item) => {\n        return item.isSelected;\n      });\n      if (previouslySelected) {\n        previouslySelected.isSelected = false;\n      }\n      item.isSelected = !item.isSelected;\n      // EventBus.$emit(`dropdownue:changeValue${this.instanceId}`, item.id);\n      this.$emit('change', item.id);\n    },\n    getItemEvents(item) {\n      return {\n        mouseover: () => {\n          this.highlight(item);\n        },\n        mouseout: () => {\n          this.blur(item);\n        },\n        click: () => {\n          this.select(item);\n        }\n      };\n    }\n  },\n  render() {\n    return this.$scopedSlots.default({\n      isSelected: this.item.isSelected,\n      isHighlighted: this.item.isHighlighted,\n\n      highlight: this.highlight,\n      itemMouseoverEvent: (item) => {\n        return this.getItemEvents(item).mouseover();\n      },\n      itemMouseoutEvent: (item) => {\n        return this.getItemEvents(item).mouseout();\n      },\n      itemEvents: this.getItemEvents\n    });\n  }\n};\n\nexport { DropdownItem };\n","import uuidv4 from 'uuid/v4';\nimport { hasClickedAway, listHelpers, optionsHelpers } from './helpers';\n\n\nconst defaultOptions = {\n  closeOnSelect: true,\n  closeOnClickaway: true,\n  resetFilterOnSelect: true,\n  fields: {\n    unique: 'id',\n    label: 'label'\n  }\n};\n\nconst Dropdown = {\n  name: 'GhostaxDropdown',\n  props: {\n    rawList: {\n      type: Array,\n      required: false\n    },\n    defaultValue: {\n      type: String,\n      required: false,\n      default: undefined\n    },\n    filterQuery: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    options: {\n      type: Object,\n      required: false,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      instanceId: uuidv4(),\n      isOpen: false,\n      value: this.defaultValue\n    };\n  },\n  computed: {\n    nomalizedOptions() {\n      optionsHelpers.validate(this.options, defaultOptions);\n      return optionsHelpers.normalize(this.options, defaultOptions);\n    },\n    normalizedList() {\n      return listHelpers.normalize(this.rawList, this.value);\n    },\n    listToRender() {\n      return this.normalizedList.filter((item) => {\n        return item[this.nomalizedOptions.fields.label].includes(this.filterQuery);\n      });\n    }\n  },\n  watch: {\n    isOpen() {\n      if (this.isOpen) {\n        document.addEventListener('click', this.handleClickAway);\n        document.addEventListener('keydown', this.handleClickAway);\n      } else {\n        document.removeEventListener('click', this.handleClickAway);\n        document.removeEventListener('keydone', this.handleClickAway);\n      }\n    }\n  },\n  mounted() {\n    this.normalizeOptions();\n    this.listenOnChangeValue();\n  },\n  methods: {\n    normalizeOptions() {\n      this.normalizedOptions = optionsHelpers.normalize(this.options);\n    },\n    listenOnChangeValue() {\n      // EventBus.$on(`ghostax/dropdown:changeValue${this.instanceId}`, (newValue) => {\n      //   this.select(newValue);\n      // });\n    },\n    handleClickAway(event) {\n      if (hasClickedAway(this.$el, event) || event.key === 'Escape') {\n        this.close();\n      }\n    },\n    open() {\n      this.isOpen = true;\n      this.$emit('open');\n    },\n    close() {\n      this.isOpen = false;\n      this.$emit('close');\n    },\n    toggle() {\n      this.isOpen = !this.isOpen;\n      this.$emit('toggle', this.isOpen);\n    },\n    filterList(query) {\n      if (query) {\n        this.listToRender = this.normalizedList.filter((item) => {\n          return item[this.nomalizedOptions.fields.label].includes(query);\n        });\n      } else {\n        this.listToRender = this.normalizedList;\n      }\n    },\n    select(value) {\n      this.value = value;\n      this.$emit('change', value);\n      if (this.closeOnSelect) {\n        this.close();\n      }\n      if (this.resetOnSelect) {\n        this.filterList('');\n      }\n    }\n  },\n  render() {\n    return this.$scopedSlots.default({\n      instanceId: this.instanceId,\n      isOpen: this.isOpen,\n      isClosed: !this.isOpen,\n      value: this.value,\n      listToRender: this.listToRender,\n\n      open: this.open,\n      close: this.close,\n      toggle: this.toggle,\n      filter: this.filter\n    });\n  }\n};\n\nexport { Dropdown };\nexport { DropdownItem } from './dropdownItem';\n"],"names":["deepMerge","require","hasClickedAway","element","event","contains","target","listHelpers","normalize","list","currentValue","map","item","isSelected","id","isHighlighted","optionsHelpers","options","defaultOption","validate","passedOptions","defaultOptions","Object","keys","forEach","passedOptionKey","hasOwnProperty","console","error","DropdownItem","props","instanceId","type","String","required","Array","data","methods","highlight","blur","select","previouslySelected","this","find","$emit","getItemEvents","mouseover","_this","mouseout","click","render","$scopedSlots","default","itemMouseoverEvent","_this2","itemMouseoutEvent","itemEvents","closeOnSelect","closeOnClickaway","resetFilterOnSelect","fields","unique","label","Dropdown","name","rawList","defaultValue","undefined","filterQuery","uuidv4","isOpen","value","computed","nomalizedOptions","normalizedList","listToRender","filter","includes","watch","document","addEventListener","handleClickAway","removeEventListener","mounted","normalizeOptions","listenOnChangeValue","normalizedOptions","$el","key","close","open","toggle","filterList","query","resetOnSelect","isClosed"],"mappings":"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"}