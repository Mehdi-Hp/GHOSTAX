import e from"crypto";import t from"vue";import i from"deepmerge";for(var n=function(){return e.randomBytes(16)},s=[],o=0;o<256;++o)s[o]=(o+256).toString(16).substr(1);var r=function(e,t){var i=t||0,n=s;return[n[e[i++]],n[e[i++]],n[e[i++]],n[e[i++]],"-",n[e[i++]],n[e[i++]],"-",n[e[i++]],n[e[i++]],"-",n[e[i++]],n[e[i++]],"-",n[e[i++]],n[e[i++]],n[e[i++]],n[e[i++]],n[e[i++]],n[e[i++]]].join("")};var l=function(e,t,i){var s=t&&i||0;"string"==typeof e&&(t="binary"===e?new Array(16):null,e=null);var o=(e=e||{}).random||(e.rng||n)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t)for(var l=0;l<16;++l)t[s+l]=o[l];return t||r(o)},u=new t,a={normalize:function(e,t){var i=this;return this.list.map(function(e){var t=Object.assign({},e,{isSelected:e.isSelected||i.value==e.id||!1,isHighlighted:e.isHighlighted||!1});return i.$emit("updateList",t),t})}},h={normalize:function(e){return i(this.options,this.defaultOptions)},validate:function(e,t){Object.keys(e).forEach(function(e){t.hasOwnProperty(e)||console.error(e+" doesn't seem to be a valid option. valid options are -> "+t)})}},c={props:{instanceId:{type:String,required:!0},list:{type:Array,required:!0},item:{type:Object,required:!0}},data:function(){return{isSelected:!1,isHighlighted:!1}},methods:{highlight:function(e){e.isHighlighted=!0},blur:function(e){e.isHighlighted=!1},select:function(e){var t=this.list.find(function(e){return e.isSelected});t&&(t.isSelected=!1),e.isSelected=!e.isSelected,u.$emit("dropdownue:changeValue"+this.instanceId,e.id),this.$emit("change",e.id)},getItemEvents:function(e){var t=this;return{mouseover:function(){t.highlight(e)},mouseout:function(){t.blur(e)},click:function(){t.select(e)}}}},render:function(){var e=this;return this.$scopedSlots.default({isSelected:this.item.isSelected,isHighlighted:this.item.isHighlighted,highlight:this.highlight,itemMouseoverEvent:function(t){return e.getItemEvents(t).mouseover()},itemMouseoutEvent:function(t){return e.getItemEvents(t).mouseout()},itemEvents:this.getItemEvents})}},d={closeOnSelect:!0,closeOnClickaway:!0,resetFilterOnSelect:!0,fields:{unique:"id",label:"label"}},f={name:"GhostaxDropdown",props:{rawList:{type:Array,required:!1},defaultValue:{type:String,required:!1,default:void 0},filterQuery:{type:String,required:!1,default:""},options:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{instanceId:l(),isOpen:!1,normalizedList:[],listItemsToRender:[],value:this.defaultValue}},computed:{nomalizedOptions:function(){return h.validate(this.option,d),h.normalize(this.option,d)},normalizedList:function(){return a.normalize(this.list,this.value)}},watch:{isOpen:function(){this.isOpen?(document.addEventListener("click",this.handleClickAway),document.addEventListener("keydown",this.handleClickAway)):(document.removeEventListener("click",this.handleClickAway),document.removeEventListener("keydone",this.handleClickAway))},filterQuery:{immediate:!0,handler:function(e){this.filterList(e)}}},mounted:function(){this.normalizeOptions(),this.listenOnChangeValue()},methods:{normalizeOptions:function(){this.normalizedOptions=h.normalize(this.options)},listenOnChangeValue:function(){var e=this;u.$on("ghostax/dropdown:changeValue"+this.instanceId,function(t){e.select(t)})},handleClickAway:function(e){(function(e,t){return!e.contains(t.target)}(this.$el,e)||"Escape"===e.key)&&this.close()},open:function(){this.isOpen=!0,this.$emit("open")},close:function(){this.isOpen=!1,this.$emit("close")},toggle:function(){this.isOpen=!this.isOpen,this.$emit("toggle",this.isOpen)},filterList:function(e){this.listItemsToRender=e?this.normalizedList.filter(function(t){return t.name.includes(e)}):this.normalizedList},select:function(e){this.value=e,this.$emit("change",e),this.closeOnSelect&&this.close(),this.resetOnSelect&&this.filterList("")}},render:function(){return this.$scopedSlots.default({isOpen:this.isOpen,isClosed:!this.isOpen,value:this.value,listToRender:this.listItemsToRender,open:this.open,close:this.close,toggle:this.toggle,filter:this.filter})}};export{f as Dropdown,c as DropdownItem};
