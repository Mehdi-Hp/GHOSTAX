import e from"uuid/v4";var t=require("deepmerge"),i=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1?arguments[1]:void 0;return e.map(function(e){return Object.assign({},e,{isSelected:e.isSelected||t==e.id||!1,isHighlighted:e.isHighlighted||!1})})},n=function(e,i){return t(i,e)},s=function(e,t){Object.keys(e).forEach(function(e){t.hasOwnProperty(e)||console.error("".concat(e," doesn't seem to be a valid option. valid options are -> ").concat(t))})},o={props:{instanceId:{type:String,required:!0},list:{type:Array,required:!0},item:{type:Object,required:!0}},data:function(){return{isSelected:!1,isHighlighted:!1}},methods:{highlight:function(e){e.isHighlighted=!0},blur:function(e){e.isHighlighted=!1},select:function(e){var t=this.list.find(function(e){return e.isSelected});t&&(t.isSelected=!1),e.isSelected=!e.isSelected,this.$emit("change",e.id)},getItemEvents:function(e){var t=this;return{mouseover:function(){t.highlight(e)},mouseout:function(){t.blur(e)},click:function(){t.select(e)}}}},render:function(){var e=this;return this.$scopedSlots.default({isSelected:this.item.isSelected,isHighlighted:this.item.isHighlighted,highlight:this.highlight,itemMouseoverEvent:function(t){return e.getItemEvents(t).mouseover()},itemMouseoutEvent:function(t){return e.getItemEvents(t).mouseout()},itemEvents:this.getItemEvents})}},r={closeOnSelect:!0,closeOnClickaway:!0,resetFilterOnSelect:!0,fields:{unique:"id",label:"label"}},l={name:"GhostaxDropdown",props:{rawList:{type:Array,required:!1},defaultValue:{type:String,required:!1,default:void 0},filterQuery:{type:String,required:!1,default:""},options:{type:Object,required:!1,default:function(){return{}}}},data:function(){return{instanceId:e(),isOpen:!1,value:this.defaultValue}},computed:{nomalizedOptions:function(){return s(this.options,r),n(this.options,r)},normalizedList:function(){return i(this.rawList,this.value)},listToRender:function(){var e=this;return this.normalizedList.filter(function(t){return t[e.nomalizedOptions.fields.label].includes(e.filterQuery)})}},watch:{isOpen:function(){this.isOpen?(document.addEventListener("click",this.handleClickAway),document.addEventListener("keydown",this.handleClickAway)):(document.removeEventListener("click",this.handleClickAway),document.removeEventListener("keydone",this.handleClickAway))}},mounted:function(){this.normalizeOptions(),this.listenOnChangeValue()},methods:{normalizeOptions:function(){this.normalizedOptions=n(this.options)},listenOnChangeValue:function(){},handleClickAway:function(e){(function(e,t){return!e.contains(t.target)}(this.$el,e)||"Escape"===e.key)&&this.close()},open:function(){this.isOpen=!0,this.$emit("open")},close:function(){this.isOpen=!1,this.$emit("close")},toggle:function(){this.isOpen=!this.isOpen,this.$emit("toggle",this.isOpen)},filterList:function(e){var t=this;this.listToRender=e?this.normalizedList.filter(function(i){return i[t.nomalizedOptions.fields.label].includes(e)}):this.normalizedList},select:function(e){this.value=e,this.$emit("change",e),this.closeOnSelect&&this.close(),this.resetOnSelect&&this.filterList("")}},render:function(){return this.$scopedSlots.default({instanceId:this.instanceId,isOpen:this.isOpen,isClosed:!this.isOpen,value:this.value,listToRender:this.listToRender,open:this.open,close:this.close,toggle:this.toggle,filter:this.filter})}};export{l as Dropdown,o as DropdownItem};
//# sourceMappingURL=dropdown.esm.js.map
